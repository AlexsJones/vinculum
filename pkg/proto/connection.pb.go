// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: connection.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ConnectionAck_State int32

const (
	ConnectionAck_Negotiating ConnectionAck_State = 0
	ConnectionAck_Known       ConnectionAck_State = 1
)

// Enum value maps for ConnectionAck_State.
var (
	ConnectionAck_State_name = map[int32]string{
		0: "Negotiating",
		1: "Known",
	}
	ConnectionAck_State_value = map[string]int32{
		"Negotiating": 0,
		"Known":       1,
	}
)

func (x ConnectionAck_State) Enum() *ConnectionAck_State {
	p := new(ConnectionAck_State)
	*p = x
	return p
}

func (x ConnectionAck_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionAck_State) Descriptor() protoreflect.EnumDescriptor {
	return file_connection_proto_enumTypes[0].Descriptor()
}

func (ConnectionAck_State) Type() protoreflect.EnumType {
	return &file_connection_proto_enumTypes[0]
}

func (x ConnectionAck_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionAck_State.Descriptor instead.
func (ConnectionAck_State) EnumDescriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{1, 0}
}

type ConnectionSyn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *NodeConfig `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *ConnectionSyn) Reset() {
	*x = ConnectionSyn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionSyn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionSyn) ProtoMessage() {}

func (x *ConnectionSyn) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionSyn.ProtoReflect.Descriptor instead.
func (*ConnectionSyn) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectionSyn) GetNode() *NodeConfig {
	if x != nil {
		return x.Node
	}
	return nil
}

type ConnectionAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node  *NodeConfig         `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	State ConnectionAck_State `protobuf:"varint,2,opt,name=state,proto3,enum=proto.ConnectionAck_State" json:"state,omitempty"`
}

func (x *ConnectionAck) Reset() {
	*x = ConnectionAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionAck) ProtoMessage() {}

func (x *ConnectionAck) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionAck.ProtoReflect.Descriptor instead.
func (*ConnectionAck) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectionAck) GetNode() *NodeConfig {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ConnectionAck) GetState() ConnectionAck_State {
	if x != nil {
		return x.State
	}
	return ConnectionAck_Negotiating
}

var File_connection_proto protoreflect.FileDescriptor

var file_connection_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x8d, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x12,
	0x25, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x23, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x01, 0x32, 0x40, 0x0a,
	0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x22, 0x00, 0x42,
	0x0b, 0x5a, 0x09, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_connection_proto_rawDescOnce sync.Once
	file_connection_proto_rawDescData = file_connection_proto_rawDesc
)

func file_connection_proto_rawDescGZIP() []byte {
	file_connection_proto_rawDescOnce.Do(func() {
		file_connection_proto_rawDescData = protoimpl.X.CompressGZIP(file_connection_proto_rawDescData)
	})
	return file_connection_proto_rawDescData
}

var file_connection_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_connection_proto_goTypes = []interface{}{
	(ConnectionAck_State)(0), // 0: proto.ConnectionAck.State
	(*ConnectionSyn)(nil),    // 1: proto.ConnectionSyn
	(*ConnectionAck)(nil),    // 2: proto.ConnectionAck
	(*NodeConfig)(nil),       // 3: proto.NodeConfig
}
var file_connection_proto_depIdxs = []int32{
	3, // 0: proto.ConnectionSyn.node:type_name -> proto.NodeConfig
	3, // 1: proto.ConnectionAck.node:type_name -> proto.NodeConfig
	0, // 2: proto.ConnectionAck.state:type_name -> proto.ConnectionAck.State
	1, // 3: proto.Node.Register:input_type -> proto.ConnectionSyn
	2, // 4: proto.Node.Register:output_type -> proto.ConnectionAck
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_connection_proto_init() }
func file_connection_proto_init() {
	if File_connection_proto != nil {
		return
	}
	file_node_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_connection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionSyn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_connection_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_connection_proto_goTypes,
		DependencyIndexes: file_connection_proto_depIdxs,
		EnumInfos:         file_connection_proto_enumTypes,
		MessageInfos:      file_connection_proto_msgTypes,
	}.Build()
	File_connection_proto = out.File
	file_connection_proto_rawDesc = nil
	file_connection_proto_goTypes = nil
	file_connection_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	// Client to leader registration
	Register(ctx context.Context, in *ConnectionSyn, opts ...grpc.CallOption) (*ConnectionAck, error)
}

type nodeClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeClient(cc grpc.ClientConnInterface) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) Register(ctx context.Context, in *ConnectionSyn, opts ...grpc.CallOption) (*ConnectionAck, error) {
	out := new(ConnectionAck)
	err := c.cc.Invoke(ctx, "/proto.Node/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	// Client to leader registration
	Register(context.Context, *ConnectionSyn) (*ConnectionAck, error)
}

// UnimplementedNodeServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServer struct {
}

func (*UnimplementedNodeServer) Register(context.Context, *ConnectionSyn) (*ConnectionAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectionSyn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Node/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Register(ctx, req.(*ConnectionSyn))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Node_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "connection.proto",
}
